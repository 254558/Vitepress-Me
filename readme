# VitePress 进阶配置指南

## 安装步骤

1. 执行命令：`npx vitepress init`
2. 再次执行命令：`npx vitepress init`

## 运行方法

执行命令：`npm run docs:dev`

## 部署到 Vercel 失败的解决步骤

1. 在 `package.json` 的 `scripts` 中新增一行：  
   `"build": "vitepress build"`
2. 在 Vercel 中设置 `Output Directory` 为：  
   `.vitepress/dist`

## 配置网站基本信息

在 `docs/.vitepress/config.mjs` 中进行如下配置：

```javascript
export default {
  // 网站基本信息
  title: '我的技术文档',
  description: '使用 VitePress 构建的专业技术文档',
  lang: 'zh-CN',
  
  // 站点图标
  head: [
    ['link', { rel: 'icon', href: '/favicon.ico' }]
  ],
  
  // 主题配置
  themeConfig: {
    // 顶部导航
    nav: [
      { text: '首页', link: '/' },
      { text: '指南', link: '/guide/' },
      { text: 'API', link: '/api/' },
      { text: '关于', link: '/about/' }
    ],
    
    // 自动侧边栏配置，.vitepress/config.mts
import { defineConfig } from 'vitepress'
import fs from 'fs'
import path from 'path'

// 自动生成 sidebar
function getSidebar() {
  // 1. 找到 doc 目录
  const docsPath = path.resolve(__dirname, '../doc')

  // 2. 读取目录下所有文件
  const files = fs.readdirSync(docsPath)

  // 3. 过滤掉非 md 文件，并生成 sidebar 对象
  return [
    {
      text: '文档',
      items: files
        .filter((file) => file.endsWith('.md')) // 只要 md 文件
        .map((file) => {
          const name = file.replace('.md', '') // 去掉后缀
          return {
            text: name,              // 侧边栏显示的名字
            link: '/doc/' + name     // 对应的路由
          }
        })
    }
  ]
}

// VitePress 配置
export default defineConfig({
  title: "把你们都鲨了",
  description: "A VitePress Site",
  themeConfig: {
    logo: 'logoo.svg',
    sidebar: getSidebar(), // 自动生成
    search: {
      provider: 'local'
    },
    socialLinks: [
      { icon: 'github', link: 'https://github.com/vuejs/vitepress' }
    ]
  }
})